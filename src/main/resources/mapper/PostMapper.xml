<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fish.dao.PostMapper" >
  <resultMap id="BaseResultMap" type="com.fish.pojo.Post" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user" property="user" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="video_url" property="videoUrl" jdbcType="VARCHAR" />
    <result column="fishing_method" property="fishingMethod" jdbcType="VARCHAR" />
    <result column="fishing_grain" property="fishingGrain" jdbcType="VARCHAR" />
    <result column="poster_date" property="posterDate" jdbcType="TIMESTAMP" />
    <result column="fishing_logs" property="fishingLogs" jdbcType="INTEGER" />
    <result column="reward_amount" property="rewardAmount" jdbcType="INTEGER" />
    <result column="longitude" property="longitude" jdbcType="DOUBLE" />
    <result column="latitude" property="latitude" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user, content, video_url, fishing_method, fishing_grain, poster_date, fishing_logs, 
    reward_amount, longitude, latitude
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_post
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_post
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.fish.pojo.Post" useGeneratedKeys="true" keyProperty="id">
    insert into tb_post
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="user != null" >
        user,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="videoUrl != null" >
        video_url,
      </if>
      <if test="fishingMethod != null" >
        fishing_method,
      </if>
      <if test="fishingGrain != null" >
        fishing_grain,
      </if>
      <if test="posterDate != null" >
        poster_date,
      </if>
      <if test="fishingLogs != null" >
        fishing_logs,
      </if>
      <if test="rewardAmount != null" >
        reward_amount,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="user != null" >
        #{user,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="videoUrl != null" >
        #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="fishingMethod != null" >
        #{fishingMethod,jdbcType=VARCHAR},
      </if>
      <if test="fishingGrain != null" >
        #{fishingGrain,jdbcType=VARCHAR},
      </if>
      <if test="posterDate != null" >
        #{posterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fishingLogs != null" >
        #{fishingLogs,jdbcType=INTEGER},
      </if>
      <if test="rewardAmount != null" >
        #{rewardAmount,jdbcType=INTEGER},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=INTEGER},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fish.pojo.Post" >
    update tb_post
    <set >
      <if test="user != null" >
        user = #{user,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="videoUrl != null" >
        video_url = #{videoUrl,jdbcType=VARCHAR},
      </if>
      <if test="fishingMethod != null" >
        fishing_method = #{fishingMethod,jdbcType=VARCHAR},
      </if>
      <if test="fishingGrain != null" >
        fishing_grain = #{fishingGrain,jdbcType=VARCHAR},
      </if>
      <if test="posterDate != null" >
        poster_date = #{posterDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fishingLogs != null" >
        fishing_logs = #{fishingLogs,jdbcType=INTEGER},
      </if>
      <if test="rewardAmount != null" >
        reward_amount = #{rewardAmount,jdbcType=INTEGER},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  
  
  <!-- 查询帖子列表 -->
  <select id="postList" resultType = "Map" parameterType = "Map" >
	SELECT 
		       p.id, u.image, u.nick, le.name as level, p.reward_amount, 
		       DATE_FORMAT(poster_date,'%H:%i') as time, 
		       TIMESTAMPDIFF(Month, u.frist_fishing_date ,now()) as monthDiff, 
		       IFNULL(s.fishCount,0) as fishCount, 
		       IFNULL(sum(fl.fishing_count), 0) as totalCount,
			   IFNULL(sum(fl.fishing_weight), 0) as totalWeight,
		       p.content, GROUP_CONCAT(pim.image) as images,
		       IFNULL(pxx.praiseCount,0) as praiseCount, 
		       IFNULL(e.evalCount,0) as evalCount,
		       IFNULL(r.reCount,0) as rewardCount
		       <if test="userId != null and userId != '' " >
					,IFNULL(prax.id,null) as praiseId, IFNULL(prax.status,0) as praiseStatus 
			   </if>  
			   
		       <if test = " latitude != null and latitude != '' ">
			       ,ROUND(
			              6378.138 * 2 * ASIN(SQRT(POW(SIN((#{latitude} * PI() / 180 - p.latitude * PI() / 180) / 2 ),
			                    2) + COS(#{latitude} * PI() / 180) * COS(p.latitude * PI() / 180) * POW(
			                    SIN((#{longitude} * PI() / 180 - p.longitude * PI() / 180) / 2), 2))) * 1000
			            ) AS distance
		       </if>
	  FROM
		        tb_post p INNER JOIN tb_user u ON p.user = u.id 
			              LEFT JOIN tb_post_image pim ON p.id = pim.post 
			              LEFT JOIN tb_fishing_logs fl ON fl.post = p.id 
			              LEFT JOIN 
						              (
						                   select count(s.id) as fishCount, s.user from tb_sign s 
						              ) s on s.user = p.user 
						  LEFT JOIN 
								      (
									        select pa.id, pa.name, pa.code from  tb_parameter pa left join tb_parameter prt on pa.parent = prt.id 
									            where  prt.code = #{parent_code} 
									  ) le ON u.level = le.code 
			              LEFT JOIN 
						              (
						                    select px.post,count(px.id) as praiseCount from tb_praise px  where px.status = #{status} GROUP BY px.post 
						              ) pxx ON pxx.post = p.id 
			              LEFT JOIN 
						              (
						                    select ev.post, count(ev.id) as evalCount from tb_evaluate ev where ISNULL(ev.parent) GROUP BY ev.post  
						              ) e ON e.post = p.id 
			              LEFT JOIN 
						              (
						                  select rx.product_id, count(rx.id) as reCount from tb_order rx where rx.product_type = #{reward_type} AND rx.status = #{status} GROUP BY rx.product_id
						              ) r ON r.product_id = p.id 
					<if test="userId != null and userId != '' " >
						  LEFT JOIN 
						              (
						                   select pra.id, pra.user, pra.status, pra.post from tb_praise pra where pra.user = #{userId}  
						              ) prax ON prax.post = p.id 
					</if>
	WHERE 
	           1 = 1 
	           <if test="chooseMethodStr and chooseMethodStr != null and chooseMethodStr.size() > 0">
	          		and p.fishing_method in (
	          		   <foreach collection="chooseMethodStr" item="method" separator=",">#{method}</foreach>
	          		)
	           </if>
	           
	           <if test="chooseClassStr and chooseClassStr != null and chooseClassStr.size() > 0">
	          		and p.fishing_grain in (
	          			<foreach collection="chooseClassStr" item="class" separator=",">#{class}</foreach>
	          		)
	           </if>
            
		
	GROUP BY 
	            u.id, pim.post    
	
	<!-- 最新的数据 -->
	<if test = " searchType == 'latest' ">
			ORDER BY p.poster_date desc 
	</if>
	
	<!-- 离我最近 -->
	<if test = " searchType == 'closer' ">
			ORDER BY distance asc 
	</if>
	
	<!-- 精华帖 (用户点赞最多) -->
	<if test = " searchType == 'nice' ">
			ORDER BY  praiseCount desc  
	</if>
	
	
  </select>
  
  
  
  <!-- 帖子详情 -->
  <select id="postDetail" parameterType="Map" resultType="Map">
		SELECT 
			       p.id, u.image, u.nick, le.name as level, 
			       p.longitude, p.latitude, p.reward_amount,
			       DATE_FORMAT(poster_date,'%H:%i') as time, 
			       TIMESTAMPDIFF(Month, u.frist_fishing_date ,now()) as monthDiff, 
			       p.content, GROUP_CONCAT(pim.image) as images,
			       IFNULL(s.fishCount,0) as fishCount, 
			       IFNULL(sum(fl.fishing_count), 0) as totalCount,
				   IFNULL(sum(fl.fishing_weight), 0) as totalWeight,
			       IFNULL(prax.id,null) as praiseId, 
			       IFNULL(prax.status,0) as praiseStatus
		 FROM
		      tb_post p LEFT JOIN tb_user u ON p.user = u.id 
		                LEFT JOIN tb_post_image pim ON p.id = pim.post 
		                LEFT JOIN tb_fishing_logs fl ON fl.post = p.id 
						LEFT JOIN 
					                (
					                   select count(s.id) as fishCount, s.user from tb_sign s 
					                ) s on s.user = p.user
					    LEFT JOIN 
								    (
								        select pa.id, pa.name, pa.code from  tb_parameter pa left join tb_parameter prt on pa.parent = prt.id 
								            where  prt.code = #{parent_code} 
								    ) le ON u.level = le.code
		                LEFT JOIN 
					                (
					                    select pra.id, pra.user, pra.status, pra.post from tb_praise pra where pra.user = #{userId}   
					                ) prax ON prax.post = p.id 
		WHERE 
		        p.id = #{post} 
		         
		
		GROUP BY  
					pim.post 
  
  
  
  </select>





</mapper>